# memory.py
import logging

logger = logging.getLogger('Memory')

class Memory:
    def __init__(self):
        self.memory_store = {}

    def is_not_empty(self):
        """Checks if the memory store is not empty."""
        return bool(self.memory_store)

    def remember(self, key, role, value):
        """Stores a value in memory with the specified key."""
        if key not in self.memory_store:
            self.memory_store[key] = {'Human': '', 'AI': '', 'Plot Code Generated By AI': []}
        self.memory_store[key][role] = value
        logger.info(f"Stored {role} message for key {key} in memory.")

    def recall(self, key):
        """Retrieves a value from memory by its key."""
        return self.memory_store.get(key, "Key not found in memory")

    def recall_all(self):
        """Returns all memory content."""
        return str(self.memory_store)

    def clear_all_conversation(self):
        """Clears all conversations from memory."""
        self.memory_store.clear()
        logger.info("Cleared all conversations from memory.")

    def recall_last_conversation(self, number_last_conversation):
        """Retrieves the last N conversations."""
        keys = sorted(self.memory_store.keys())
        if not keys:
            return {}
        return {k: self.memory_store[k] for k in keys[-number_last_conversation:]}

    def forget(self, key):
        """Removes a value from memory by its key."""
        if key in self.memory_store:
            del self.memory_store[key]
            logger.info(f"Forgot key {key} from memory.")
        else:
            logger.warning(f"Key {key} not found in memory.")

    def clear_memory(self):
        """Clears all stored memory."""
        self.memory_store.clear()
        logger.info("Cleared all memory.")
